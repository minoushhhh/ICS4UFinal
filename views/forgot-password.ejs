<!DOCTYPE html>

<head>
    <%- include('layouts/navbar'); -%>
        <title>Forgot Password</title>
</head>

<body>

    <div style="margin-top: 4vh;" class="fade-in-container">
        <h1 class="login-title">Forgot your password?</h1>

        <h2 class="login-subtitle">Log-in here.</h2>

    </div>

    <div class="forgot-password-container fade-in-container">

        <div>
            <input class="input-box" id="customerEmail" placeholder="E-mail">
            <span id="emailVerification" class="email-verification"></span>
        </div>
        <br>
        <div>
            <input class="input-box" id="code" placeholder="Verification code" disabled>
            <span id="codeVerificationLabel" class="code-verification"></span>
        </div>

        <br>
        <div class="forgot-password-button-div">
            <button id="sendEmailButton" class="forgot-submit-button" onclick="sendEmail()">Send e-mail</button>
            <button id="verifyCodeButton" class="forgot-submit-button-disabled" onclick="verifyCode()" disabled>Submit
                verification
                code</button>
        </div>
    </div>

</body>
<script>
    let code = document.getElementById("code");
    code.style.backgroundColor = '#e7e7e7';
    const customerEmail = document.getElementById('customerEmail');
    async function sendEmail() {
        let email = document.getElementById('customerEmail').value;
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        const verifyCodeButton = document.getElementById("verifyCodeButton");

        if (!emailRegex.test(email)) {
            emailVerification.innerHTML = "Invalid e-mail address";
            emailVerification.style.color = "red";
            emailVerification.style.opacity = 1;
        }
        else {
            const response = await fetch('forgot-password-email', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email }),
            });
            const result = await response.text();
            if (result !== "Email not linked to an account") {
                verifyCodeButton.removeAttribute("disabled");
                verifyCodeButton.classList.add("forgot-submit-button");
                verifyCodeButton.classList.remove("forgot-submit-button-disabled");
                code.style.backgroundColor = 'white';
                code.removeAttribute("disabled");
                customerEmail.style.backgroundColor = '#e7e7e7';
                customerEmail.setAttribute("disabled", true);
                sendEmailButton.classList.add("forgot-submit-button-disabled");
                sendEmailButton.classList.remove("forgot-submit-button");
                sendEmailButton.setAttribute("disabled", true);
                emailVerification.innerHTML = result;
                emailVerification.style.color = "rgb(26, 155, 26)";
                emailVerification.style.opacity = 1;
            }
            else {
                emailVerification.innerHTML = result;
                emailVerification.style.color = "red";
                emailVerification.style.opacity = 1;
            }
        }
    }
    async function verifyCode() {
        const codeValue = document.getElementById("code").value;
        const codeVerificationLabel = document.getElementById("codeVerificationLabel");
        const response = await fetch('verify-code', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ codeValue }),
        });

        const result = await response.text();

        if (result == "Code verified successfully") {
            codeVerificationLabel.innerHTML = result;
            codeVerificationLabel.style.color = "rgb(26, 155, 26)";
            codeVerificationLabel.style.opacity = 1;
            loginRemotely(customerEmail.value);
        } else {
            codeVerificationLabel.innerHTML = "Invalid verification code";
            codeVerificationLabel.style.color = "red";
            codeVerificationLabel.style.opacity = 1;
        }
    }

    async function loginRemotely(email) {
        try {
            const response = await fetch("/login-remotely", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ email }),
            });

            const result = await response.json();

            if (result.success) {
                window.location.href = "/profile";
            } else {
                console.error(result.message);
            }
        } catch (error) {
            console.error("Error:", error);
        }
    }
</script>

<footer>
    <%- include('layouts/footer'); -%>
</footer>

</html>