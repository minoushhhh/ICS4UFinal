<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Teachable Machine Image Model</title>
</head>
<body>

    <div>Teachable Machine Image Model</div>
    <button type="button" onclick="init()">Start</button>
    <!-- Displayed image element -->
    <img id="carImage" src="images/v10.jpeg" alt="Description of the image" class="imgTest">
    <!-- Button to trigger prediction for the displayed image -->
    <button type="button" onclick="predictFromImage()">Predict from Image</button>
    <div id="label-container"></div>

    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest/dist/tf.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@teachablemachine/image@latest/dist/teachablemachine-image.min.js"></script>
    <script type="text/javascript">
        const URL = "https://teachablemachine.withgoogle.com/models/dy0VvIqtW/";
        let model, labelContainer, maxPredictions;

        async function init() {
            const modelURL = URL + "model.json";
            const metadataURL = URL + "metadata.json";

            model = await tmImage.load(modelURL, metadataURL);
            maxPredictions = model.getTotalClasses();

            labelContainer = document.getElementById("label-container");
            for (let i = 0; i < maxPredictions; i++) {
                labelContainer.appendChild(document.createElement("div"));
            }
            predictFromImage();
        }

        // Function to predict from the displayed image
        async function predictFromImage() {
            const imageElement = document.getElementById("carImage");

            if (imageElement) {
                const prediction = await model.predict(imageElement);
                for (let i = 0; i < maxPredictions; i++) {
                    const classPrediction =
                        prediction[i].className + ": " + prediction[i].probability.toFixed(2);
                    labelContainer.childNodes[i].innerHTML = classPrediction;
                }
            } else {
                alert("Image element not found.");
            }
        }
    </script>

    
</body>

<style>

    .imgTest{
        height: 400px;
        width: 400px;
    }

</style>

</html>


