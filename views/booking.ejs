<!DOCTYPE html>

<head>
    <%- include('layouts/navbar'); -%>
        <title>Booking</title>
</head>

<body>

    <div class="fade-in-container">

        <h1 class="title">Book a detail with us.</h1>

        <div class="booking-grid">

            <div class="options">

                <div>
                    <button class="booking-button-option" onclick="updateSelectedDetail(1)" id="btn1">
                        <h1 id="d1">Interior</h1>
                        <p class="button-option-text">Elevate your ride's interior with our Detailing service.
                            We'll
                            clean, vacuum, and restore, keeping it straightforward and effective.</p>
                    </button>
                </div>

                <div>
                    <button class="booking-button-option " onclick="updateSelectedDetail(2)" id="btn2">
                        <h1 id="d2">Exterior</h1>
                        <p class="button-option-text">Boost your car's street appeal with our Exterior
                            Detailing. A
                            simple wash, wax, and buff to make it shine without unnecessary frills.</p>
                    </button>
                </div>

                <div>
                    <button class="booking-button-option" onclick="updateSelectedDetail(3)" id="btn3">
                        <h1 id="d3">Full Package</h1>
                        <p class="button-option-text">Give your vehicle an all-around refresh with our Full
                            Detailing. No fluff, just a thorough inside-out clean for a sleek look.</p>
                    </button>
                </div>

                <div>
                    <button class="booking-button-option" onclick="updateSelectedDetail(4)" id="btn4">
                        <h1 id="d4">Headlight Polish</h1>
                        <p class="button-option-text">Enhance your night driving visibility with our Headlight
                            Polishing. Clearing up headlights without the fuss.</p>
                    </button>
                </div>


            </div>

            <div class="calendar-big-container">

                <div>
                    <button class="calendarUpdateButton" onclick="updateCalendar(0)">Previous Month</button>
                    <button class="calendarUpdateButton" onclick="updateCalendar(1)">Next Month</button>
                </div>

                <br>

                <div class="calendar-container">

                    <h2 class="viewingmonth" id="viewingmonth"></h2>

                    <div class="calendar-grid">

                        <div>Sun</div>
                        <div>Mon</div>
                        <div>Tue</div>
                        <div>Wed</div>
                        <div>Thu</div>
                        <div>Fri</div>
                        <div>Sat</div>

                        <button id="0" class="day" onclick="getDay(0)"></button>
                        <button id="1" class="day" onclick="getDay(1)"></button>
                        <button id="2" class="day" onclick="getDay(2)"></button>
                        <button id="3" class="day" onclick="getDay(3)"></button>
                        <button id="4" class="day" onclick="getDay(4)"></button>
                        <button id="5" class="day" onclick="getDay(5)"></button>
                        <button id="6" class="day" onclick="getDay(6)"></button>
                        <button id="7" class="day" onclick="getDay(7)"></button>
                        <button id="8" class="day" onclick="getDay(8)"></button>
                        <button id="9" class="day" onclick="getDay(9)"></button>
                        <button id="10" class="day" onclick="getDay(10)"></button>
                        <button id="11" class="day" onclick="getDay(11)"></button>
                        <button id="12" class="day" onclick="getDay(12)"></button>
                        <button id="13" class="day" onclick="getDay(13)"></button>
                        <button id="14" class="day" onclick="getDay(14)"></button>
                        <button id="15" class="day" onclick="getDay(15)"></button>
                        <button id="16" class="day" onclick="getDay(16)"></button>
                        <button id="17" class="day" onclick="getDay(17)"></button>
                        <button id="18" class="day" onclick="getDay(18)"></button>
                        <button id="19" class="day" onclick="getDay(19)"></button>
                        <button id="20" class="day" onclick="getDay(20)"></button>
                        <button id="21" class="day" onclick="getDay(21)"></button>
                        <button id="22" class="day" onclick="getDay(22)"></button>
                        <button id="23" class="day" onclick="getDay(23)"></button>
                        <button id="24" class="day" onclick="getDay(24)"></button>
                        <button id="25" class="day" onclick="getDay(25)"></button>
                        <button id="26" class="day" onclick="getDay(26)"></button>
                        <button id="27" class="day" onclick="getDay(27)"></button>
                        <button id="28" class="day" onclick="getDay(28)"></button>
                        <button id="29" class="day" onclick="getDay(29)"></button>
                        <button id="30" class="day" onclick="getDay(30)"></button>
                        <button id="31" class="day" onclick="getDay(31)"></button>
                        <button id="32" class="day" onclick="getDay(32)"></button>
                        <button id="33" class="day" onclick="getDay(33)"></button>
                        <button id="34" class="day" onclick="getDay(34)"></button>
                        <button id="35" class="day" onclick="getDay(35)"></button>
                        <button id="36" class="day" onclick="getDay(36)"></button>

                    </div>

                </div>

                <br>

                <h2>Select a time.</h2>

                <div class="time-slot-container">
                    <button class="timeSlotButton" id="time1" onclick="updateSelectedTime(1)">*</button>
                    <button class="timeSlotButton" id="time2" onclick="updateSelectedTime(2)">*</button>
                    <button class="timeSlotButton" id="time3" onclick="updateSelectedTime(3)">*</button>
                </div>

                <br><br>

                <button class="calendarUpdateButton" onclick="book()">Book</button>

                <br><br>

            </div>

        </div>

        <!-- Reset booked dates in calendar, in case testing was done on it. -->
        <!-- <button onclick="updateDatabase()"></button> -->

    </div>

</body>

<style>
    @media (min-width: 1700px) {
        .booking-button-option {
            height: 28vh;
            border-radius: 25px;
            padding: 20px;
            cursor: pointer;
            color: whitesmoke;
            border: none;
            background-color: #0071e3;
            font-family: "Nunito", "Helvetica Neue";
            transition: background-color 0.3s ease;
            cursor: pointer;
        }

        .calendar-container {
            border: 2px solid rgba(0, 0, 0, 0);
            border-radius: 14px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
            width: 28vw;
            padding-top: 3vh;
            margin: auto;
            background-color: #fafafa;
        }

        .booking-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
        }

        .calendar-big-container {
            padding-top: 8vh;
            padding-right: 14vw;
        }

        .options {
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr 1fr;
            padding-top: 8vh;
            padding-left: 11vw;
            padding-bottom: 8vh;
            gap: 2vw;
            max-width: 38vw;
            height: 30vh;
            padding-left: 15vw;
        }
    }

    @media (max-width: 1700px) {
        .booking-button-option {
            height: 100%;
            border-radius: 25px;
            padding: 20px;
            cursor: pointer;
            color: whitesmoke;
            border: none;
            background-color: #0071e3;
            font-family: "Nunito", "Helvetica Neue";
            transition: background-color 0.3s ease;
            cursor: pointer;
        }

        .calendar-container {
            border: 2px solid rgba(0, 0, 0, 0);
            border-radius: 14px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
            width: 100%;
            padding-top: 3vh;
            margin: auto;
            background-color: #fafafa;
        }

        .booking-grid {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .calendar-big-container {
            padding-top: 8vh;
            padding-right: 0;
        }

        .options {
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr 1fr;
            padding-top: 8vh;
            padding-bottom: 0;
            gap: 2vw;
            max-width: 38vw;
            height: 100%;
            padding-left: 0;
        }
    }
</style>

<script>
    let detailType;
    const urlParams = new URLSearchParams(window.location.search);
    const selectedButton = urlParams.get('selectedButton');
    if (selectedButton) {
        detailType = selectedButton - 1;
        const btn = document.getElementById("btn" + selectedButton);
        btn.style.backgroundColor = "#00b4d8";
        for (let i = 1; i < 5; i++) {
            if (i != selectedButton) {
                document.getElementById("btn" + i).style.backgroundColor = "#e7e7e7";
            }
        }
    }

    let monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    let selectedDay;
    let selectedTimeSlot;

    let month;
    let daysInMonth;
    let firstDay;

    let nextMonth;
    let nextDaysInMonth;
    let nextFirstDay;

    const currentMonthDate = new Date();
    const nextMonthDate = new Date();

    const today = new Date();

    let viewingMonth;

    let globalMonth = "";

    let adminSchedule;

    updateCurrentInfo();
    updateNextInfo();
    getAdminSchedule();

    async function getAdminSchedule() {
        try {
            const response = await fetch('/admin-schedule');
            adminSchedule = await response.json();
            updateCalendar(0);
        } catch (error) {
            console.error("Error getting admin schedule:", error);
            document.getElementById('adminScheduleResult').innerHTML = "Error getting admin schedule.";
        }
    }

    async function updateDatabase() {
        try {
            const response = await fetch('/update-admin');
        } catch (error) {
            console.error("Error getting admin schedule:", error);
            document.getElementById('adminScheduleResult').innerHTML = "Error getting admin schedule.";
        }
    }

    function updateCalendar(currentOrNext) {
        if (currentOrNext != viewingMonth) {
            resetSelected();
            resetSelectedTime()
        }

        clearCalendar();

        if (currentOrNext == 0) {
            document.getElementById("viewingmonth").innerHTML = monthNames[month];
            globalMonth = monthNames[month];
            let counter = firstDay;
            for (let i = 0; i < daysInMonth; i++) {
                let day = i + 1;
                let tempDay = document.getElementById((firstDay + i).toString());
                tempDay.textContent = day;
            }

            for (let i = 0; i < daysInMonth; i++) {
                if (adminSchedule.Schedule[0][i][0][1] == false && adminSchedule.Schedule[0][i][1][1] == false && adminSchedule.Schedule[0][i][2][1] == false) {
                    document.getElementById(i + firstDay).disabled = true;
                }
                if (document.getElementById(i + firstDay).innerHTML < today.getDate() + 7) {
                    document.getElementById(i + firstDay).disabled = true;
                }
            }
        }

        else {
            document.getElementById("viewingmonth").innerHTML = monthNames[nextMonth];
            globalMonth = monthNames[nextMonth];
            let counter = nextFirstDay;
            for (let i = 0; i < nextDaysInMonth; i++) {
                let tempDay = document.getElementById((nextFirstDay + i).toString());
                tempDay.textContent = i + 1;
                document.getElementById(i + nextFirstDay).disabled = false;
            }
            for (let i = 0; i < nextDaysInMonth; i++) {
                if (adminSchedule.Schedule[1][i][0][1] == false && adminSchedule.Schedule[1][i][1][1] == false && adminSchedule.Schedule[1][i][2][1] == false) {
                    document.getElementById(i + nextFirstDay).disabled = true;
                }
            }
        }

        for (let i = 0; i < 37; i++) {
            let dayBtn = document.getElementById(i.toString());
            if (dayBtn.textContent == "") {
                dayBtn.style.visibility = "hidden";
            }
        }

        viewingMonth = currentOrNext;
    }

    function clearCalendar() {
        for (let i = 0; i < 37; i++) {
            let tempDay = document.getElementById(i.toString());
            tempDay.textContent = "";
        }
    }

    function updateCurrentInfo() {
        currentMonthDate.setDate(1);
        month = currentMonthDate.getMonth();
        daysInMonth = getDaysInMonth(currentMonthDate.getFullYear(), currentMonthDate.getMonth());
        firstDay = currentMonthDate.getDay();
    }

    function updateNextInfo() {
        nextMonth = (month + 1) % 12;
        nextMonthDate.setMonth(nextMonth);
        if (month == 11) {
            nextMonthDate.setFullYear(currentMonthDate.getFullYear() + 1);
        }
        nextMonthDate.setDate(1);
        nextFirstDay = nextMonthDate.getDay();
        nextDaysInMonth = getDaysInMonth(nextMonthDate.getFullYear(), nextMonthDate.getMonth());

    }

    function getDaysInMonth(year, month) {
        const lastDay = new Date(year, month + 1, 0).getDate();
        return lastDay;
    }

    function getDay(dayInput) {
        var tempMonth = new Date();

        selectedDay = document.getElementById(dayInput).innerText;
        selectedDay--;
        updateSelectedDay(dayInput);

        let currentMonthIndex;
        let currentMonthName;

        if (viewingMonth == 0) {
            currentMonthIndex = tempMonth.getMonth();
        }

        else if (viewingMonth == 1) {
            currentMonthIndex = tempMonth.getMonth() + 1;
        }

        currentMonthName = monthNames[currentMonthIndex % 12];

        let element1 = document.getElementById("time1");
        let element2 = document.getElementById("time2");
        let element3 = document.getElementById("time3");

        if (adminSchedule.Schedule[viewingMonth][selectedDay][0][1] == false) {
            element1.disabled = true;
            element1.style.backgroundColor = "#e7e7e7";
        }
        else {
            element1.disabled = false;
            element1.style.backgroundColor = "#0071e3";

        }

        if (adminSchedule.Schedule[viewingMonth][selectedDay][1][1] == false) {
            element2.disabled = true;
            element2.style.backgroundColor = "#e7e7e7";
        }
        else {
            element2.disabled = false;
            element2.style.backgroundColor = "#0071e3";
        }


        if (adminSchedule.Schedule[viewingMonth][selectedDay][2][1] == false) {
            element3.disabled = true;
            element3.style.backgroundColor = "#e7e7e7";
        }
        else {
            element3.disabled = false;
            element3.style.backgroundColor = "#0071e3";
        }

        document.getElementById("time1").textContent = "12 PM";
        document.getElementById("time2").textContent = "3 PM";
        document.getElementById("time3").textContent = "6 PM";
    }

    function updateSelectedDay(id) {
        let pressed = document.getElementById(id);
        resetSelectedTime();
        if (pressed.innerHTML.trim() !== "") {
            for (let i = 0; i < 37; i++) {
                document.getElementById(i.toString()).style.backgroundColor = "#FAFAFA";
            }
            pressed.style.backgroundColor = "#0071e3";
            pressed.style.borderRadius = "12px";
        }
    }

    function resetSelected() {
        selectedDay = undefined;
        for (let i = 0; i < 37; i++) {
            document.getElementById(i.toString()).style.backgroundColor = "transparent";
            document.getElementById(i.toString()).style.visibility = "visible";
        }
    }

    function updateSelectedTime(id) {
        selectedTimeSlot = id - 1;
        let pressed = document.getElementById("time" + id);
        pressed.style.backgroundColor = "#00b4d8";
        for (let i = 1; i < 4; i++) {
            if (i !== id) {
                document.getElementById("time" + i).style.backgroundColor = "#e7e7e7";
            }
        }
    }

    function resetSelectedTime() {
        selectedTimeSlot = undefined;
        document.getElementById("time1").style.backgroundColor = "#0071e3";
        document.getElementById("time2").style.backgroundColor = "#0071e3";
        document.getElementById("time3").style.backgroundColor = "#0071e3";
    }

    function updateSelectedDetail(id) {
        detailType = id - 1;
        let pressed = document.getElementById("btn" + id);
        pressed.style.backgroundColor = "#00b4d8";
        for (let i = 1; i < 5; i++) {
            if (i != id) {
                document.getElementById("btn" + i).style.backgroundColor = "#e7e7e7";
            }
        }
    }

    async function sendConfirmationEmail(day, month, time, detail) {
        try {
            const response = await fetch("/send-confirmation-email", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ day, month, time, detail }),
            });

            const result = await response.json();

        } catch (error) {
            console.error("Error:", error);
        }
    }

    async function book() {
        if ("<%= username %>" && selectedDay >= 0 && viewingMonth >= 0 && selectedTimeSlot >= 0 && detailType >= 0) {
            let time = document.getElementById("time" + (selectedTimeSlot + 1)).textContent;
            let detail = document.getElementById("d" + (detailType + 1)).textContent;
            const response = await bookDatabase(selectedDay, viewingMonth, selectedTimeSlot, detailType);
            alert("Sucesfully booked a " + detail + " detail on " + globalMonth + " " + (selectedDay + 1) + ", for " + time + ".");
            window.location.href = "/profile";
            sendConfirmationEmail((selectedDay + 1), globalMonth, time, detail);
        }
        else if (!"<%= username %>") {
            alert("Must be logged-in first to book a detail.");
            window.location.href = "/login";
        }
        else {
            alert("Select all fields before proceeding.");
        }
    }

    async function bookDatabase(selectedDay, viewingMonth, selectedTimeSlot, detailType) {
        try {
            const response = await fetch('/book', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    selectedDay,
                    viewingMonth,
                    selectedTimeSlot,
                    detailType,
                }),
            });

            const result = await response.json();

            if (response.ok) {
                console.log(result.message);
            } else {
                console.error(result.message);
            }
        } catch (error) {
            console.error("Error updating admin schedule:", error);
        }
    }

</script>

<footer>
    <%- include('layouts/footer'); -%>
</footer>


</html>